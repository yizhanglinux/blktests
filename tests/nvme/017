#!/bin/bash
# SPDX-License-Identifier: GPL-2.0+
# Copyright (c) 2017-2018 Western Digital Corporation or its affiliates.
#
# Test many target file-ns creation/deletion under one subsystem.

. tests/nvme/rc

DESCRIPTION="create/delete many file-ns and test discovery"

requires() {
	_nvme_requires
	_require_nvme_trtype_is_loop
}

set_conditions() {
	_set_nvme_trtype "$@"
}

test() {
	echo "Running ${TEST_NAME}"

	_setup_nvmet

	local port
	local iterations="${nvme_num_iter}"

	truncate -s "${nvme_img_size}" "$(_nvme_def_file_path)"

	local genctr=1

	_create_nvmet_subsystem "${def_subsysnqn}" "$(_nvme_def_file_path)" \
		"${def_subsys_uuid}"

	for ((i = 2; i <= iterations; i++)); do
		_create_nvmet_ns "${def_subsysnqn}" "${i}" \
				 "$(_nvme_def_file_path)"
	done

	port="$(_create_nvmet_port "${nvme_trtype}")"
	_add_nvmet_subsys_to_port "${port}" "${def_subsysnqn}"

	genctr=$(_check_genctr "${genctr}" "adding a subsystem to a port")

	_remove_nvmet_subsystem_from_port "${port}" "${def_subsysnqn}"
	_remove_nvmet_port "${port}"

	for ((i = iterations; i > 1; i--)); do
		_remove_nvmet_ns "${def_subsysnqn}" "$i"
	done

	_remove_nvmet_subsystem "${def_subsysnqn}"

	rm "$(_nvme_def_file_path)"

	echo "Test complete"
}
